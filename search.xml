<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>红黑树</title>
      <link href="/2023/02/28/%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
      <url>/2023/02/28/%E7%BA%A2%E9%BB%91%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p>红黑树，应该是一种我们听到的比较多的一个数据结构，比如说JDK1.8的HashMap，在之前数组加链表的结构的基础上，如果链表太长，就会转为红黑树。作为一个比较复杂的数据结构，但是本身底子还是二叉树。但是为什么搞一个单独的二叉树，难道红黑树就是二叉树染个颜色吗，他和二叉树区别什么，意义何在有什么作用？红黑树和我们另一个见到比较多的B+树有什么区别，想我们知道B+树用的最知名的一个案例就是关系型数据库，红黑树可不可以取而代之？</p><p>这里就是更整体的了解红黑树，而不是单独一个角度去认识红黑树，比如说红黑树的结构，为什么弄一个这么“拧巴”的二叉树。左旋右旋的目的，和其他类似的数据结构对比。</p><h3 id="红黑树基础：二叉树"><a href="#红黑树基础：二叉树" class="headerlink" title="红黑树基础：二叉树"></a>红黑树基础：二叉树</h3><p>红黑树本身结构，在不考虑节点颜色，以及先加入元素的左旋右旋的动作等。第一眼看上去，这就是二叉树，所以要先了解二叉树，才能有个对红黑树的基础认知，以及为什么要单独搞出来一个红黑树，用它来解决一些什么具体问题，为什么我们一些源码底层采用红黑树，而不是采用更简单的二叉树。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于hexo博客的可迁移化改造</title>
      <link href="/2022/05/25/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%8F%AF%E8%BF%81%E7%A7%BB%E5%8C%96%E6%94%B9%E9%80%A0/"/>
      <url>/2022/05/25/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%8F%AF%E8%BF%81%E7%A7%BB%E5%8C%96%E6%94%B9%E9%80%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="为什么这次又选择hexo"><a href="#为什么这次又选择hexo" class="headerlink" title="为什么这次又选择hexo"></a>为什么这次又选择hexo</h3><p>实际上这种静态博客我之前已经放弃了，之后的一段时间自己用的是wordpress和其他的平台，好处是wordpress动态，自己建站部署，爱折腾的话真的很多可以拿来玩的，可以直接在页面去编辑文章。<br>写作平台同样也支持在线编辑，而且SEO优化做的不错，比如某XXDN，即使随便写写也会有人看到，实际上这种反馈感还蛮不错的。<br>但是呢，自己动态博客网站，域名过期没有去搞，然后在一次自己想玩某个东西没注意，把自己部署网站的服务器给重装系统了，直接GG。<br>国内目前，审核机制的原因，可能会出现滞后性，关键是服务提供商有时候跟抽风一样，觉得有必要不把鸡蛋放在一个篮子里。</p><p>而目前，静态博客直接挂载在Github上，不用担心自己服务器误操作，比较省心所以又回来走“回头路”。</p><p>列一下静态博客网站的优缺点：<br>优点：<br>1 简单，很多甚至不需要服务器，直接挂在Github Page就可以了<br>2 选择的框架足够多，有node.js的Hexo，ruby的Jekyll，go的hugo，这些都是使用非常广泛的，社区活跃插件足够多，主题更丰富（动态的目前只有PHP的wordpress，其他的都比较小众，很多都是自己手敲的，受众不多）</p><p>缺点<br>1  没有wordpress那样的后台，不能在线编辑，需要自己本地生成编辑然后再去服务器或者Github上把编译好的传上去。<br>2  如果换电脑或者系统，可能就要重新弄了</p><span id="more"></span><p>就像上边hugo hexo Jekyll这些都是比较流行的，用的比较多，我为什么选择hexo呢？很简单，就是之前部署过，实际上我推荐的是hugo，号称编译最快<br>而且是go语言，我也比较感兴趣想试水，再加上是以上几种在GitHub上star最多的，应该是首选。</p><p>但是，鉴于之前GitHub Page已经用了hexo，那就选择这个先玩明白hexo再说，未来的架构选择肯定还是hugo—-动态wordpress—-动态更好的或者自己手撸。</p><h3 id="hexo改造"><a href="#hexo改造" class="headerlink" title="hexo改造"></a>hexo改造</h3><p>这次改造的重点是针对我之前对静态博客弃坑的痛点：可迁移，异地编译<br>这里的迁移指的不只是，说我写的博客可以迁出去，实际上现在主流的自建静态&#x2F;动态博客框架，或者博客运营平台都支持markdown文档。<br><br>可迁移就是我换电脑了，或者说我用别人的电脑也可以编辑文章给自己的博客更新，这一点在我刚开始使用hexo，发现自己本地配置环境也就罢了。<br>很多东西传到GitHub Page只是编译好的静态文件，你换个电脑可能就没办法根据你GitHub Page上的东西继续。</p><p>所以这次的改造其实是通过Git分支管理来解决这个问题<br>参照的主要文章是:<br></p><p><a href="https://liujiaboy.github.io/2020/03/06/Github-Hexo/" title="Hexo的可迁移改造">Hexo的可迁移改造</a><br></p><p>主要的思路就是，Git创建分支：master，hexo两个分支<br>master分支主要是hexo编译后的静态文件，主要是为了挂载在Github Page上的（这个是可以在_config.yml上面指定的）<br>而新创建的hexo分支，则是你本地hexo的全部备份，这样你换电脑重装系统，只需要拉一下这个分支，配置好node.js环境，然后稍微做一些操作就可以，在新的电脑上生成文件编译了。<br></p><p>这个思路其实可以套用在其他的静态博客挂载的Github Page上的，对了最好把全量备份的分支设置成默认分支，这样以后直接来下来直接改，否则拉下来的master分支都是编译好的文件用来直接展示，没啥用。</p><h3 id="hexo的一些设置"><a href="#hexo的一些设置" class="headerlink" title="hexo的一些设置"></a>hexo的一些设置</h3><p>hexo涉及到一些基本操作，需要自己手动设置，比如说要换成自己的域名，更换个主题。<br>还有一些是需要自己定制化的一些，比如说默认展示文章全部的就听坑爹的，我们可以设置为预览的形式。<br>(实际上由于主题限制，像有些yml配置可能不生效，不如这个缩略的，可能要在文章里面添加more标签，其实wordpress也这样)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">enable: true #将原有的false改为true</span><br><span class="line">length: 300  #设置预览的字数</span><br></pre></td></tr></table></figure><p>还有就是可以依靠安装插件来是实现某些功能，比如说统计字数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>这里推荐一个插件，因为静态页面，很多操作还要通过命令，比如生成新的文章，发布这些。博客以内容为主，如何简化写作的，尤其是我不想去post目录里面去修改md文章，能解决在线编辑这个问题。我这边添加一个插件hexo-admin</p><p>具体的步骤：<br>（1）跳转到对应hexo的目录</p><p>（2）安装admin插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br></pre></td></tr></table></figure><p>（3）启动服务器，进入到admin,就可以进入在线编辑页<br>localhost:4000&#x2F;admin</p><p>以下是关于一些功能的设置以及hexo的插件列表地址：</p><p><a href="https://zhuanlan.zhihu.com/p/33616481" title="知乎上的一个关于hexo的优化设置">知乎上的一个关于hexo的优化设置</a><br><br><a href="https://hexo.io/plugins/" title="Hexo的官方插件列表地址">Hexo的官方插件列表地址</a><br></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
